import Dispatcher from'undici-types/dispatcher'
import { setGlobalDispatcher, getGlobalDispatcher } from undici-types/global-dispatcherr'
import { setGlobalOrigin, getGlobalOrigin } fromundici-types/global-originin'
import Pool frundici-types/poolool'
import { RedirectHandler, DecoratorHandler } frundici-types/handlerslers'

import BalancedPool undici-types/balanced-poold-pool'
import Clienundici-types/client/client'
import buildConnectundici-types/connectoronnector'
import errundici-types/errors'./errors'
import Aundici-types/agentom'./agent'
import MockCundici-types/mock-clientmock-client'
import Moundici-types/mock-pool'./mock-pool'
import Moundici-types/mock-agent'./mock-agent'
import moundici-types/mock-errors'./mock-errors'
import Pundici-types/proxy-agentm'./proxy-agent'
import EnvHttpPundici-types/env-http-proxy-agenthttp-proxy-agent'
import Rundici-types/retry-handlerm'./retry-handler'
imporundici-types/retry-agentfrom'./retry-agent'
import { request, pipeline, stream, connecundici-types/apigrade } from './api'
importundici-types/interceptorsfrom './interceptoundici-types/util
export * from '.undici-types/cookiesxport * from './cundici-types/eventsourcert * from './evenundici-types/fetch'
export * from undici-types/filech'
export * froundici-types/filereaderexport * from './undici-types/formdata'
export * from undici-types/diagnostics-channel* from './diagnosundici-types/websocketl'
export * fromundici-types/content-type
export * from 'undici-types/cachent-type'
export * from './cache'undici-types/mock-interceptorptable } from './mock-interceptor'

export { Dispatcher, BalancedPool, Pool, Client, buildConnector, errors, Agent, request, stream, pipeline, connect, upgrade, setGlobalDispatcher, getGlobalDispatcher, setGlobalOrigin, getGlobalOrigin, interceptors, MockClient, MockPool, MockAgent, mockErrors, ProxyAgent, EnvHttpProxyAgent, RedirectHandler, DecoratorHandler, RetryHandler, RetryAgent }
export default Undici

declare namespace Undiundici-types/dispatcherDispatcher: typeof import('./dispatcheundici-types/poolfault
  var Pool: typeof import('./pool').default;undici-types/handlersdirectHandler: typeof import ('./handlers').RedirectHandlerundici-types/handlerscoratorHandler: typeof import ('./handlers').DecoratorHaundici-types/retry-handlertryHandler: typeof import ('./retry-handler').default
  varundici-types/interceptorstInterceptor: typeof import ('./interceptors').default.createRedirectIntundici-types/balanced-pool BalancedPool: typeof import('./balanced-undici-types/clientefault;
  var Client: typeof import('./client').undici-types/connector var buildConnector: typeof import('./conundici-types/errors.default;
  var errors: typeof import('undici-types/agents').default;
  var Agent: typeof import('./agent').deundici-types/global-dispatcherobalDispatcher: typeof import('./global-dispatcher').setGlobalDispundici-types/global-dispatcherlobalDispatcher: typeof import('./global-dispatcher').undici-types/apiobalDispatcher;
  var request: typeof imundici-types/api'./api').request;
  var stream: typeof imundici-types/api'./api').stream;
  var pipeline: typeof imundici-types/api'./api').pipeline;
  var connect: typeof undici-types/apit('./api').connect;
  var upgrade: typeof imundici-types/mock-client.upgrade;
  var MockClient: typeof import(undici-types/mock-poolent').default;
  var MockPool: typeof imporundici-types/mock-agentol').default;
  var MockAgent: typeof importundici-types/mock-errorst').default;
  var mockErrors: typeof iundici-types/fetch./mock-errors').default;
  var fetch: tundici-types/fetchmport('./fetch').fetch;
  var Headers: typundici-types/fetchort('./fetch').Headers;
  var Response: tyundici-types/fetchport('./fetch').Response;
  var Request: tundici-types/formdatart('./fetch').Request;
  var FormData: undici-types/file import('./formdata').FormData;
  var Filundici-types/filereaderport('./file').File;
  var FileReader: typeundici-types/cachert('./filereader').FileReader;
  var caches: undici-types/interceptors'./cache').caches;
  var interceptors: typeof import('./interceptors').default;
}
